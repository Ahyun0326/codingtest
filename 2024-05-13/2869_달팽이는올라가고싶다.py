"""
2869. 달팽이는 올라가고 싶다.

- A + K * (A - B) >= V를 만족시켜야 함
- (A-B)인 상태로 K번 등반하다가 A만큼 증가함으로써 목적지에 도달한다.
- 식을 풀어보면, => K >= (V - A) / (A - B)
- 그렇다면 답은 sol = (V-A) / (A-B) + 1이라고 가정해보자.

[반례]
- (V-A) % (A-B)의 값이 0이 아닌 경우 위 식은 성립하지 않는다.
- [4, 1, 11] 일때, 위 수식대로라면 답은 3, 그러나 답은 4이다.
- 생각해보면 (V-A)를 (A-B)로 나누었을 때 0으로 떨어진다면 다음 값은 반드시 V 이상인 값이 나온다.
- 그러나 나머지 값이 존재한다면 K번 다음에 V 미만인 값이 나올 수 있다는 소리이다.
    - [4, 1, 11] 일때의 높이의 변화는 3 -> 6 -> '9' -> 13
- 따라서 K를 구하는 과정에서 나머지 값이 존재하는 경우, 1을 더하는 것이 아닌 2를 더한다!

sol (나머지 값 == 0) -> (V-A) / (A-B) + 1
sol (나머지 값 != 0) -> (V-A) / (A-B) + 2

[풀이]
1. A, B, V를 입력받는다.
2. V <= A라면 1을 반환하고 종료한다.
3. V > A라면 다음 과정을 수행한다.
    1. M [=(V-A) % (A-B)]를 구한다.
    2. K [=(V-A) // (A-B)]를 구한다.
    3-A. M == 0 -> K + 1을 반환하고 종료한다.
    3-B. M != 0 -> K + 2을 반환하고 종료한다.

---

[다른 풀이]
- A, B, V가 주어졌을 때, 달팽이는 하루에 총 (A-B) 만큼 이동할 수 있음
- 달팽이는 낮에만 올라갈 수 있기 때문에, 총 올라가야 하는 거리는 (V-B)이다.
- 따라서 (V-B) / (A-B)를 하면 총 소요되는 날짜를 구할 수 있다.
- 단, 이 경우도 [4, 1, 11] 반례가 적용됨.
- 이 경우도 (V-B) % (A-B) != 0인 경우로, 즉 낮 동안 V에 도달하지 못하고 B로 인해 미끄러지는 경우이다.
- 따라서 답은 다음과 같다.

sol (나머지 값 == 0) -> (V-B) / (A-B)
sol (나머지 값 != 0) -> (V-B) / (A-B) + 1
"""
from sys import stdin


def solution(A, B, V):
    if V <= A:
        return 1

    K, M = divmod(V - B, A - B)
    return K if M == 0 else K + 1


input = stdin.readline
A, B, V = map(int, input().split())
print(solution(A, B, V))
